<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="1" version="0.9.2" url="" name="CultivContactForm" folder="e2fa03de-3ed1-46c4-933a-059845357a10" packagepath="" repositoryGuid="65194810-1f85-11dd-bd0b-0800200c9a66" packageGuid="57e6949c-94f1-431c-a5dd-6a1a00e2e176" hasUpdate="False" enableSkins="False" skinRepoGuid="00000000-0000-0000-0000-000000000000">
    <license url="http://www.opensource.org/licenses/mit-license.php">MIT license</license>
    <author url="http://www.cultiv.nl">Sebastiaan Janssen</author>
    <readme><![CDATA[The Cultiv Contact Form package allows you to quickly get a basic contact form in your website. 

The form will ask your website visitor for a name, e-mail address (required) and a message (required). 

This package will add a documentType, a macro, a template, a CSS file and a content item (all called "CultivContactForm", feel free to rename). 
These are just created as an example, you can delete the template and content item and the "CultivContactForm" macro to one of your templates to make the contact form show up. 
Then, create a content item with the documentType "CultivContactForm" and configure your form. All of the configurations can be done in the content item. 

Make sure that the mail server settings in your web.config are correct when you start using this package, you will need at least (in system.net - mailSettings - smtp - network): 
- host="your.smtp.server" 
- port="xx" 

If your smtp server requires authentication, add these: 
- userName="yourUsername" 
- password="yourPassword" 
- defaultCredentials="false"]]></readme>
    <actions>
    </actions>
    <datatypes>
    </datatypes>
    <content nodeId="1143" loadChildNodes="False">
    </content>
    <templates>1140</templates>
    <stylesheets>1142</stylesheets>
    <documenttypes>1141</documenttypes>
    <macros>17</macros>
    <files>
      <file>/usercontrols/CultivContactForm.ascx</file>
      <file>/bin/CultivContactForm.dll</file>
      <file>/bin/Recaptcha.dll</file>
      <file>/css/CultivContactForm.css</file>
      <file>/usercontrols/CultivContactForm.ascx</file>
    </files>
    <languages>
    </languages>
    <dictionaryitems>
    </dictionaryitems>
    <loadcontrol>
    </loadcontrol>
  </package>
  <package id="2" version="2.5.2" url="" name="ImageGen" folder="1bab38f8-4998-4e7e-8073-9e898afdce7f" packagepath="" repositoryGuid="65194810-1f85-11dd-bd0b-0800200c9a66" packageGuid="cbc37b15-4a53-4c3f-b8a0-e49543d84192" hasUpdate="False" enableSkins="False" skinRepoGuid="00000000-0000-0000-0000-000000000000">
    <license url="http://www.opensource.org/licenses/mit-license.php">Proprietary License</license>
    <author url="http://www.percipientstudios.com">Douglas Robar</author>
    <readme><![CDATA[ImageGen 2.5.2

Create high-quality, perfectly sized images for photo galleries, product images, staff profiles, and more. Add watermarks and overlays, rotate, resize, crop, convert image formats, and more with thirty powerful features. Create graphical text from all TrueType fonts with complete control over size, style, color, lineheight, and more for headlines and menus. High performance server and client caching. 

Don’t waste your valuable time manually creating, resizing, or editing each image in Photoshop. ImageGen is an easy-to-use application for your Umbraco or ASP.NET 2.0+ website that automatically resizes photos, screenshots, and images from icon to thumbnail to full-screen sizes.

ImageGen can create text graphics as well as overlay text on images, which is particularly useful for making image-based navigation with styled dynamic text on top. And ImageGen can automatically protect and brand your images with watermarks and corporate logos.

With more than 30 options, ImageGen can create hundreds of thousands of variations to meet virtually any need. ImageGen is easy to install and use on your website. ImageGen creates extremely high-quality images quickly. And ImageGen’s advanced caching means images are served immediately for fast and responsive websites.

Extensive documentation.]]></readme>
    <actions>
    </actions>
    <datatypes>
    </datatypes>
    <content nodeId="" loadChildNodes="False">
    </content>
    <templates>
    </templates>
    <stylesheets>
    </stylesheets>
    <documenttypes>
    </documenttypes>
    <macros>
    </macros>
    <files>
      <file>/bin/imagegen.dll</file>
      <file>/config/ImageGen.config</file>
      <file>//ImageGen.ashx</file>
      <file>/usercontrols/ImageGenInstaller.ascx</file>
    </files>
    <languages>
    </languages>
    <dictionaryitems>
    </dictionaryitems>
    <loadcontrol>
    </loadcontrol>
  </package>
  <package id="3" version="1.1.1" url="" name="Designit Gallery" folder="f4c65dea-e76f-444a-8894-f7b1d00cfed2" packagepath="" repositoryGuid="" packageGuid="" hasUpdate="False" enableSkins="False" skinRepoGuid="00000000-0000-0000-0000-000000000000">
    <license url="http://www.opensource.org/licenses/mit-license.php">MIT license</license>
    <author url="http://designit.com">Designit A/S</author>
    <readme><![CDATA[This package has only been tested on version 4.5.2

You need to install ImageGen to get this package to work correctly.
http://our.umbraco.org/projects/website-utilities/imagegen
ImageGen needs to be installed manually to work on version 4.5.2
extract the following files from the zip and place them here: 
/bin/ImageGen.dll 
/umbraco/ImageGen.ashx 
/config/ImageGen.sample.config ]]></readme>
    <actions>
    </actions>
    <datatypes>
    </datatypes>
    <content nodeId="" loadChildNodes="False">
    </content>
    <templates>
    </templates>
    <stylesheets>
    </stylesheets>
    <documenttypes>
    </documenttypes>
    <macros>19</macros>
    <files>
      <file>~/usercontrols/Designit.Gallery/ShowGallery.ascx</file>
      <file>/bin/Designit.Umb.Gallery.WebUi.dll</file>
      <file>/css/Designit.Gallery/jquery.lightbox-0.5.css</file>
      <file>/images/Designit.Gallery/lightbox-blank.gif</file>
      <file>/images/Designit.Gallery/lightbox-btn-close.gif</file>
      <file>/images/Designit.Gallery/lightbox-btn-next.gif</file>
      <file>/images/Designit.Gallery/lightbox-btn-prev.gif</file>
      <file>/images/Designit.Gallery/lightbox-ico-loading.gif</file>
      <file>/usercontrols/Designit.Gallery/ShowGallery.ascx</file>
      <file>/scripts/Designit.Gallery/jquery.lightbox-0.5.min.js</file>
      <file>/scripts/Designit.Gallery/jquery.js</file>
    </files>
    <languages>
    </languages>
    <dictionaryitems>
    </dictionaryitems>
    <loadcontrol>
    </loadcontrol>
  </package>
  <package id="4" version="3.0.1" url="" name="XSLTsearch" folder="9b01fdf5-e43c-4c80-aec3-1c7972683eb8" packagepath="" repositoryGuid="" packageGuid="" hasUpdate="False" enableSkins="False" skinRepoGuid="00000000-0000-0000-0000-000000000000">
    <license url="http://www.opensource.org/licenses/mit-license.php">MIT license</license>
    <author url="http://www.percipientstudios.com">Percipient Studios</author>
    <readme><![CDATA[XSLTsearch is the easy search solution for Umbraco web sites with up to a few thousand pages. It is fast, completely self-contained, and extremely configurable.

With XSLTsearch you can search for all words and phrases in all document properties and attributes, including your custom properties. Search results are automatically sorted by relevance with search terms highlighted in the results.

XSLTsearch installs in all Umbraco sites, with or without Runway installed.

New in 3.0:
- Multi-lingual support with dictionary items
- Medium trust support (helper functions now in /app_code/xsltsearch.cs)
- Many bug fixes

(Note: use XSLTsearch 2.8.0 for Umbraco 3.x, 4.0, or 4.5+ if using the legacy XML schema)
]]></readme>
    <actions>
      <Action runat="install" alias="addStringToHtmlElement" templateAlias="RunwayMaster" htmlElementId="head" position="end"><![CDATA[	<link rel="stylesheet" type="text/css" href="/css/XSLTsearch.css" />]]></Action>
      <Action runat="install" alias="publishRootDocument" documentName="Search" />
      <Action runat="install" alias="allowDocumenttype" documentTypeAlias="XSLTsearch" parentDocumentTypeAlias="RunwayHomepage" />
      <Action runat="install" alias="moveRootDocument" documentName="Search" parentDocumentType="RunwayHomepage" />
    </actions>
    <datatypes>
    </datatypes>
    <content nodeId="1268" loadChildNodes="False">
    </content>
    <templates>1265</templates>
    <stylesheets>1267</stylesheets>
    <documenttypes>1266</documenttypes>
    <macros>25</macros>
    <files>
      <file>/xslt/XSLTsearch.xslt</file>
      <file>/App_Code/XSLTsearch.cs</file>
    </files>
    <languages>
    </languages>
    <dictionaryitems>1</dictionaryitems>
    <loadcontrol>
    </loadcontrol>
  </package>
</packages>